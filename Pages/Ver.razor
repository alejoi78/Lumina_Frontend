@page "/ver/{tipo}/{id:int}"
@inject PeliculaNegocio PeliculaNegocio
@inject SerieNegocio SerieNegocio
@inject IJSRuntime JS

@if (contenido == null)
{
    <div class="d-flex justify-content-center mt-5">
        <div class="spinner-border text-primary" role="status">
            <span class="visually-hidden">Cargando...</span>
        </div>
    </div>
}
else
{
    <div class="container mt-4 mb-4">
        <div class="card border-0 bg-transparent">
            <div class="card-header bg-dark text-white">
                <h3 class="card-title mb-0">@contenido.Titulo (@contenido.Anio)</h3>
            </div>

            <div class="card-body" style="background: black">
                <div class="row">
                    <!-- Video Section -->
                    <div class="col-lg-8 mb-3">
                        <div class="ratio ratio-16x9">
                            <video id="fm-video" controls class="w-100">
                                <source src="@videoActual" type="video/mp4">
                                Tu navegador no soporta el elemento de video.
                            </video>
                        </div>

                        @if (!contenido.EsPelicula && contenido.Episodios?.Any() == true)
                        {
                            <div class="mt-3">
                                <h5 class="text-white">Episodios</h5>
                                <ul class="list-group">
                                    @foreach (var ep in contenido.Episodios)
                                    {
                                        <li class="list-group-item list-group-item-action @(ep.Link == videoActual ? "active" : "")"
                                            @onclick="@(() => CambiarEpisodio(ep.Link))" style="cursor: pointer;">
                                            Temporada @ep.Temporada - @ep.Nombre
                                        </li>
                                    }
                                </ul>
                            </div>
                        }
                    </div>

                    <!-- Info Section -->
                    <div class="col-lg-4">
                        @if (!string.IsNullOrEmpty(contenido.Imagen))
                        {
                            <img src="@contenido.Imagen" class="img-fluid rounded mb-3 w-100" style="height: 470px" alt="Portada de @contenido.Titulo">
                        }

                        <div class="card mb-3">
                            <div class="card-body py-2">
                                <h5 class="card-title">Información</h5>
                                <ul class="list-group list-group-flush">
                                    <li class="list-group-item py-2">
                                        <strong>Tipo:</strong> @(contenido.EsPelicula ? "Película" : "Serie")
                                    </li>
                                    @if (!contenido.EsPelicula)
                                    {
                                        <li class="list-group-item py-2">
                                            <strong>Temporadas:</strong> @contenido.Temporadas
                                        </li>
                                    }
                                    <li class="list-group-item py-2">
                                        <strong>Director:</strong> @contenido.Director
                                    </li>
                                    <li class="list-group-item py-2">
                                        <strong>Género:</strong> @contenido.Genero
                                    </li>
                                    @if (contenido.EsPelicula)
                                    {
                                        <li class="list-group-item py-2">
                                            <strong>Duración:</strong> @contenido.DuracionHoras horas
                                        </li>
                                    }
                                    <li class="list-group-item py-2">
                                        <strong>Calificación:</strong> @contenido.Calificacion/5
                                    </li>
                                </ul>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

@code {
    [Parameter]
    public int id { get; set; }

    [Parameter]
    public string tipo { get; set; }

    private Contenido contenido;
    private string videoActual;

    protected override async Task OnInitializedAsync()
    {
        if (tipo == "pelicula")
        {
            var peli = await PeliculaNegocio.obtenerPorId(id);
            contenido = new Contenido
                {
                    Id = peli.IdPelicula,
                    Titulo = peli.Titulo,
                    Anio = peli.Anio,
                    Link = peli.Link,
                    Imagen = peli.Imagen.StartsWith("http") ? peli.Imagen : $"data:image;base64,{peli.Imagen}",
                    EsPelicula = true,
                    Director = peli.Director,
                    Genero = peli.Genero,
                    DuracionHoras = peli.DuracionHoras,
                    Calificacion = peli.Calificacion
                };
            videoActual = contenido.Link;
        }
        else if (tipo == "serie")
        {
            var serie = await SerieNegocio.obtenerPorId(id);
            contenido = new Contenido
                {
                    Id = serie.IdSerie,
                    Titulo = serie.Titulo,
                    Anio = serie.Anio,
                    Link = serie.Link,
                    Imagen = serie.Imagen.StartsWith("http") ? serie.Imagen : $"data:image;base64,{serie.Imagen}",
                    EsPelicula = false,
                    Temporadas = serie.Temporadas,
                    Director = serie.Director,
                    Genero = serie.Genero,
                    Calificacion = serie.Calificacion,
                    Episodios = serie.Episodios
                };

            videoActual = contenido.Episodios?.FirstOrDefault()?.Link ?? "";
        }

        await InvokeAsync(StateHasChanged);
    }

    private async void CambiarEpisodio(string link)
    {
        videoActual = link;
        await JS.InvokeVoidAsync("recargarVideo");
        StateHasChanged();
    }


    private class Contenido
    {
        public int Id { get; set; }
        public string Titulo { get; set; }
        public int Anio { get; set; }
        public string Link { get; set; }
        public string Imagen { get; set; }
        public bool EsPelicula { get; set; }
        public int Temporadas { get; set; }
        public string Director { get; set; }
        public string Genero { get; set; }
        public double DuracionHoras { get; set; }
        public double Calificacion { get; set; }
        public List<Episodio> Episodios { get; set; } = new();
    }
}

<style>
    .card {
        overflow: hidden;
    }

    .list-group-item {
        padding: 0.5rem 1rem;
    }
</style>

<script>
    function initVideoPlayer() {
        var reproductor = videojs('fm-video', {
            fluid: true,
            controls: true,
            playbackRates: [0.5, 1, 1.5, 2]
        });
    }

     function recargarVideo() {
        var video = document.getElementById("fm-video");
        if (video) {
            video.pause();
            video.load();
            video.play();
        }
    }
</script>