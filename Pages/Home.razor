    @page "/"
    @using BlazorWeb.Entidades
    @using BlazorWeb.Negocio
    @inject PeliculaNegocio PeliculaNegocio
    @inject SerieNegocio SerieNegocio
    @inject NavigationManager NavigationManager
    @inject IJSRuntime JS


<PageTitle>Home</PageTitle>

<!-- Carrusel -->
<div id="hero-carousel" class="carousel slide" data-bs-ride="carousel">
    <div class="carousel-indicators">
        <button type="button" data-bs-target="#hero-carousel" data-bs-slide-to="0" class="active" aria-current="true" aria-label="Slide 1"></button>
        <button type="button" data-bs-target="#hero-carousel" data-bs-slide-to="1" aria-label="Slide 2"></button>
        <button type="button" data-bs-target="#hero-carousel" data-bs-slide-to="2" aria-label="Slide 3"></button>
    </div>

    <div class="carousel-inner">
        <div class="carousel-item active c-item">
            <img src="/imagenes/img02.jpg" class="d-block w-100 c-img" alt="Slide 1">
            <div class="carousel-caption d-flex flex-column justify-content-center align-items-center top-0 start-50 translate-middle-x text-center">
                <p class="fs-3 text-uppercase">SIENTE LA EMOCIÓN</p>
                <h1 class="display-1 fw-bolder text-capitalize">Vive cada escena</h1>
            </div>

        </div>
        <div class="carousel-item c-item">
            <img src="/imagenes/img01.jpg" class="d-block w-100 c-img" alt="Slide 2">
            <div class="carousel-caption top-0 mt-4">
                <img src="/imagenes/logo.png" alt="Alternate Text" />
            </div>
        </div>
        <div class="carousel-item c-item">
            <img src="https://i.imgur.com/pymgzHB.jpeg" class="d-block w-100 c-img" alt="Slide 3">
            <div class="carousel-caption top-0 mt-4">
                <p class="text-uppercase fs-3 mt-5">1999</p>
                <p class="display-1 fw-bolder text-capitalize">Matrix</p>
            </div>
        </div>

    </div>
    <button class="carousel-control-prev" type="button" data-bs-target="#hero-carousel" data-bs-slide="prev">
        <span class="carousel-control-prev-icon" aria-hidden="true"></span>
        <span class="visually-hidden">Previous</span>
    </button>
    <button class="carousel-control-next" type="button" data-bs-target="#hero-carousel" data-bs-slide="next">
        <span class="carousel-control-next-icon" aria-hidden="true"></span>
        <span class="visually-hidden">Next</span>
    </button>
</div>

<!-- Sección de Contenido Aleatorio -->
<div class="container mt-5">
    <h2 class="mb-4 d-flex align-items-center">
        <i class="bi bi-collection-play me-2"></i> Recomendaciones
    </h2>

    @if (contenidoAleatorio == null)
    {
        <div class="text-center my-5">
            <div class="spinner-border text-primary" role="status">
                <span class="visually-hidden">Loading...</span>
            </div>
        </div>
    }
    else if (contenidoAleatorio.Count == 0)
    {
        <div class="alert alert-info">
            No hay contenido disponible
        </div>
    }
    else
    {
        <div class="row row-cols-2 row-cols-sm-3 row-cols-md-4 row-cols-lg-5 g-4">
            @foreach (var item in contenidoAleatorio)
            {
                <div class="col">
                    <div class="content-card" @onclick="() => IrAVer(item.Id, item.EsPelicula)">
                        <div class="content-card-inner">
                            <div class="content-card-front" style="height: 100%">
                                @if (!string.IsNullOrEmpty(item.Imagen))
                                {
                                    @if (item.Imagen.StartsWith("http"))
                                        {
                                            <img src="@item.Imagen" class="content-poster" alt="@item.Titulo" />
                                        }
                                        else
                                        {
                                            <img src="data:image;base64,@item.Imagen" class="content-poster" alt="@item.Titulo" />
                                        }
                                    }
                                    else
                                    {
                                        <div class="content-poster-placeholder">
                                            <span class="content-title">@item.Titulo</span>
                                            <span class="content-year">@item.Anio</span>
                                        </div>
                                    }
                                    @if (!item.EsPelicula)
                                    {
                                        <span class="content-badge">@item.Temporadas temp.</span>
                                    }
                                </div>
                                <div class="content-card-overlay">
                                    <div class="content-info-hover">
                                        <h5 class="content-title-hover">@item.Titulo</h5>
                                        <p class="content-year-hover">@item.Anio</p>
                                    </div>
                                    <i class="bi bi-play-circle-fill play-icon"></i>
                                    <div class="content-type">
                                        @if (item.EsPelicula)
                                        {
                                            <i class="bi bi-film"></i> <span>Película</span>
                                        }
                                        else
                                        {
                                            <i class="bi bi-tv"></i> <span>Serie</span>
                                        }
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
        }
        <br /><br />
    </div>

    <style>
        .content-card {
            width: 200px;
            height: 300px;
            position: relative;
            cursor: pointer;
            margin: 0 auto;
            transition: all 0.3s ease;
        }

        .content-card-inner {
            position: relative;
            width: 100%;
            height: 100%;
            transition: transform 0.3s;
        }

        .content-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 20px rgba(0,0,0,0.2);
        }

            .content-card:hover .content-card-inner {
                transform: scale(1.03);
            }

        .content-poster {
            width: 100%;
            height: 100%;
            object-fit: cover;
            border-radius: 5px;
            box-shadow: 0 4px 8px rgba(0,0,0,0.1);
        }

        .content-poster-placeholder {
            width: 100%;
            height: 100%;
            background-color: #f0f0f0;
            border-radius: 5px;
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            padding: 10px;
            text-align: center;
            box-shadow: 0 4px 8px rgba(0,0,0,0.1);
            position: relative;
            overflow: hidden;
        }

        .content-title {
            font-size: 0.8rem;
            font-weight: bold;
            color: #333;
        }

        .content-year {
            font-size: 0.7rem;
            color: #666;
            margin-top: 5px;
        }

        .content-badge {
            position: absolute;
            bottom: 5px;
            right: 5px;
            background-color: rgba(0, 119, 182, 0.8);
            color: white;
            padding: 2px 5px;
            border-radius: 3px;
            font-size: 0.6rem;
        }

        .content-card-overlay {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 119, 182, 0.7);
            border-radius: 5px;
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            opacity: 0;
            transition: opacity 0.3s;
        }

        .content-card:hover .content-card-overlay {
            opacity: 1;
        }

        .content-info-hover {
            position: absolute;
            top: 10px;
            left: 0;
            width: 100%;
            text-align: center;
            padding: 0 10px;
        }

        .content-title-hover {
            color: white;
            font-size: 1rem;
            font-weight: bold;
            margin-bottom: 0;
            text-shadow: 1px 1px 3px rgba(0,0,0,0.8);
        }

        .content-year-hover {
            color: #ddd;
            font-size: 0.8rem;
            margin-top: 0;
            text-shadow: 1px 1px 2px rgba(0,0,0,0.8);
        }

        .play-icon {
            font-size: 2rem;
            color: white;
            transition: transform 0.3s;
        }

        .content-card:hover .play-icon {
            transform: scale(1.2);
        }

        .content-type {
            position: absolute;
            bottom: 10px;
            color: white;
            font-size: 0.7rem;
            display: flex;
            align-items: center;
        }

            .content-type i {
                margin-right: 5px;
            }

    .c-item {
        height: 500px;
    }

    .c-img {
        height: 500px;
        object-fit: cover;
        filter: brightness(0.6);
    }
    </style>

    @code {
        private List<Contenido> contenidoAleatorio = new List<Contenido>();
        private Random random = new Random();

        protected override async Task OnInitializedAsync()
        {
            await CargarContenidoAleatorio();
        }

        private async Task CargarContenidoAleatorio()
        {
            var peliculasTask = PeliculaNegocio.listarPeliculas();
            var seriesTask = SerieNegocio.listarSeries();

            await Task.WhenAll(peliculasTask, seriesTask);

            var peliculas = await peliculasTask;
            var series = await seriesTask;

            // Combinar y mezclar aleatoriamente
            contenidoAleatorio = peliculas.Select(p => new Contenido
                {
                    Id = p.IdPelicula,
                    Titulo = p.Titulo,
                    Anio = p.Anio,
                    Imagen = p.Imagen,
                    Link = p.Link,
                    EsPelicula = true,
                    Temporadas = 0
                })
            .Concat(series.Select(s => new Contenido
                {
                    Id = s.IdSerie,
                    Titulo = s.Titulo,
                    Anio = s.Anio,
                    Imagen = s.Imagen,
                    Link = s.Link,
                    EsPelicula = false,
                    Temporadas = s.Temporadas
                }))
            .OrderBy(x => random.Next()) // Orden aleatorio
            .ToList();
        }

    private void IrAVer(int id, bool esPelicula)
    {
        NavigationManager.NavigateTo($"/ver/{(esPelicula ? "pelicula" : "serie")}/{id}");
    }



        private class Contenido
        {
            public int Id { get; set; }
            public string Titulo { get; set; }
            public int Anio { get; set; }
            public string Imagen { get; set; }
            public string Link { get; set; }
            public bool EsPelicula { get; set; }
            public int Temporadas { get; set; }
        }
    }
<script>
    // Almacenamos el intervalo en una variable global
    var carouselInterval = null;

    // Función para iniciar el auto-play
    function startCarouselAutoPlay() {
        // Limpiamos el intervalo anterior si existe
        if (carouselInterval) {
            clearInterval(carouselInterval);
        }

        // Obtenemos el botón "next" del carrusel
        var nextButton = document.querySelector("#hero-carousel .carousel-control-next");

        if (nextButton) {
            // Configuramos un nuevo intervalo (10 segundos)
            carouselInterval = setInterval(() => {
                nextButton.click();
            }, 10000);
        }
    }

    startCarouselAutoPlay()

    // Opcional: Limpiar el intervalo al salir de la página (para evitar fugas de memoria)
    window.addEventListener("beforeunload", function() {
        if (carouselInterval) {
            clearInterval(carouselInterval);
        }
    });
</script>